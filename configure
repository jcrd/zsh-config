#!/bin/zsh

source zshenv

ZSH_DATA_DIR="$XDG_DATA_HOME"/zsh

link() {
    ln -snfv "$PWD/$1" "$2"
}

mkalias() {
    echo "$1" > "$ZSH_DATA_DIR"/aliases/"$2"
    echo "@'$2' -> '$1'"
}

os() {
    [[ -n "$ID" && "$1" == "$ID" ]]
}

cmd() {
    r=0
    for c in "$@"; do
        command -v "$c" > /dev/null
        r=$((r+$?))
    done
    return $r
}

setup_plugin() {
    git submodule update --init plugins/"$1"
    link plugins/"$1" "$ZSH_DATA_DIR"/plugins/"$1"
    [[ -n "$2" ]] && link files/"$2".zsh "$ZSH_DATA_DIR"/files/"$2".zsh
}

if [[ -e "$ZSH_DATA_DIR" ]]; then
    rm -r "$ZSH_DATA_DIR"
fi

mkdir -p "$ZSH_DATA_DIR"/{aliases,funcs,plugins,files}

if [[ -e /etc/os-release ]]; then
    source /etc/os-release
else
    echo 'W: /etc/os-release not found' >&2
fi

source lib/parse-alias.zsh

# aliases
for i in aliases/*; do
    a=($(< "$i"))
    if cmd $(parse-alias -d $a); then
        mkalias "$(parse-alias $a)" "${i#aliases/}"
    fi
done

if cmd exa; then
    mkalias 'exa' ls
    mkalias 'l -l --git' ll
else
    mkalias 'l -l' ll
fi

# functions
for i in funcs/*; do
    link "$i" "$ZSH_DATA_DIR"/"$i"
done

# os-specific
for i in os/*; do
    if os "${i#os/}"; then
        for j in "$i"/*/*; do
            link "$j" "$ZSH_DATA_DIR"/"${j#$i/}"
        done
        unset j
    fi
done

unset i

# plugins
setup_plugin fast-syntax-highlighting fsh

# link to home
link zshrc ~/.zshrc
link zshenv ~/.zshenv

if [[ -e /etc/systemd/system/display-manager.service ]]; then
    link zshenv ~/.xprofile
fi

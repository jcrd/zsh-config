#!/bin/zsh

link() {
    ln -snfv "$PWD/$1" "$2"
}

os() {
    [[ -n "$ID" && "$1" == "$ID" ]]
}

cmd() {
    r=0
    for c in "$@"; do
        command -v "$c" > /dev/null
        r=$((r+$?))
    done
    return $r
}

setup_plugin() {
    git submodule update --init plugins/"$1"
    link plugins/"$1" run/plugins/"$1"
    [[ -n "$2" ]] && link files/"$2".zsh run/files/"$2".zsh
}

if [[ -e run ]]; then
    rm -r run
fi

mkdir -p run/{aliases,funcs,plugins,files}

if [[ -e /etc/os-release ]]; then
    source /etc/os-release
else
    echo 'W: /etc/os-release not found' >&2
fi

# aliases
for i in aliases/*; do
    link "$i" run/"$i"
done

if cmd exa; then
    echo exa > run/aliases/ls
    echo l -l --git > run/aliases/ll
else
    echo l -l > run/aliases/ll
fi

if cmd bat; then
    echo bat > run/aliases/cat
fi

if cmd colordiff; then
    echo colordiff > run/aliases/diff
fi

# functions
for i in funcs/*; do
    link "$i" run/"$i"
done

# os-specific
for i in os/*; do
    if os "${i#os/}"; then
        for j in "$i"/*/*; do
            link "$j" run/"${j#$i/}"
        done
        unset j
    fi
done

unset i

# plugins
setup_plugin fast-syntax-highlighting fsh

if cmd fzy; then
    setup_plugin zsh-fzy fzy
fi

# link to home
link zshrc ~/.zshrc
link zshenv ~/.zshenv

if [[ -e /etc/systemd/system/display-manager.service ]]; then
    link zshenv ~/.xprofile
fi
